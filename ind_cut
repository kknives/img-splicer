#!/bin/bash
#set -x
if [ $# -lt 2 ]; then
  cat <<-EOF
    $0 : Uses a index number near the start of the line to splice
    the document into smaller documents. Use it for splicing Allen
    questions.

    Note: The implementation is atleast O(n) on the height of the document
    so, resize before giving them the splice. Also, please deskew the image
    before giving it here. If you don't, you'll have to increase the margin,
    but there is more white than black there, which may have problems with the
    thresholds and may won't work due to all the whiteness present.

    A previous version of this script used a manual threshold, but has been
    replaced by geometric (Triangle) auto-thresholding.

    The blur is a imagemagick blur, specify it as (radius)x(sigma).

    The margin is the percentage of the width that contains the index numbers.
    A margin of 2 is 0.02% for the script.

    If you face any trouble with it not splitting up things,
    run
    magick infile -crop {margin*width}x{height}+0+0 -blur {blur} -auto-level \
      -auto-threshold -scale 1x{height}! mask.jpg 

    Usage: $0 input-file -o output-dir -b blur -m margin

    Example
    $0 file1.jpg ./out 40x80 2
EOF
exit
fi
infile=$1
outdir=$3
blur=$5
margin=$7

# Setup a temporary directory for our work
tmpdir=`mktemp -d "./ind_cut.XXXXXXXX"`
trap 'rm -rf "$tmpdir"' 0 # Remove temp dir on exit
trap 'exit 2' 1 2 3 15

width=`convert "$infile" -format '%[width]' info:`
index=`expr $width \* $margin`
index=`bc <<< "scale=0; $index / 100"`
height=`convert "$infile" -format '%[height]' info:`

convert $infile +repage -crop ${index}x${height}+0+0 -blur $blur -auto-level \
  -threshold $threshold% -scale 1x${height}! -colorspace Gray $tmpdir/mask.mpc 

# Give a preview to the user
convert $tmpdir/mask.mpc -scale ${width}x${height}! -threshold $threshold -edge .5 -blur 0x.5 $tmpdir/prev_mask.png
convert $infile \( $tmpdir/prev_mask.png -negate \) -compose Multiply -composite gif: | display

echo "Continue (Y/n)?"
read proceed

if [ "$proceed" = "n" ]; then
  exit 0
fi

row=0
marker=0
declare -a cuts # Store the cuts in an array
while [ $row -lt $height ]
do
  color=`convert $tmpdir/mask.mpc +repage -crop 0x1+0+$row -format '%[pixel:s]\n' info:`
  if [ $marker -eq 0 ]
  then
    if [ "$color" = "gray(0)" ]
    then
      # Found a question
      cuts+=($row)
      echo "Found question at $row"
      marker=1
    fi
  else
    # Cut already found, marker is set, now to reset it
    if [ "$color" != "gray(0)" ]
    then
      marker=0
    fi
  fi
  row=`expr $row + 1`
done

# The last cut is the height itself
cuts+=($height)

# Splice the image
i=0
while [ $i -lt `expr ${#cuts[@]} - 1` ]
do
  next=${cuts[$i+1]} 
  convert $infile +repage -crop ${width}x`expr $next - ${cuts[$i]}`+0+${cuts[$i]} $outdir/$(basename ${infile})_$i.png
  i=`expr $i + 1`
done

#set +x
